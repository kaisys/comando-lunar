generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id          Int             @id @default(autoincrement())
  title       String
  description String
  priority    String
  status      String          @default("Pendiente")
  createdAt   DateTime        @default(now())
  assignments TaskAssignment[] // Relación con las asignaciones
}


model Resource {
  id       Int      @id @default(autoincrement())
  type     String   @unique
  level    Float
  critical Boolean
  events   Event[]
  history ResourceHistory[]  
}

model Event {
  id          Int      @id @default(autoincrement())
  resourceId  Int
  resource    Resource @relation(fields: [resourceId], references: [id])
  message     String
  createdAt   DateTime @default(now())
}

model ResourceHistory {
  id          Int      @id @default(autoincrement())
  resourceId  Int
  level       Float
  isCritical  Boolean
  timestamp   DateTime @default(now())
  resource    Resource @relation(fields: [resourceId], references: [id])
}



model Astronaut {
  id        Int             @id @default(autoincrement())
  name      String
  avatarUrl String?          // Opcional para permitir avatares predeterminados
  role      String
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  assignments TaskAssignment[] // Relación con las asignaciones
}

model TaskAssignment {
  id          Int       @id @default(autoincrement())
  taskId      Int
  astronautId Int
  assignedAt  DateTime  @default(now())
  task        Task      @relation(fields: [taskId], references: [id], onDelete: Cascade)
  astronaut   Astronaut @relation(fields: [astronautId], references: [id], onDelete: Cascade)
}

